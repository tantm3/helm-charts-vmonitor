apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "vmonitor-metric-agent.fullname" . }}-kube
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "vmonitor-metric-agent.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "vmonitor-metric-agent.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "vmonitor-metric-agent.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- with .Values.podLabels }}
{{ toYaml . | indent 8 }}
        {{- end }}
      annotations:
        # Include a hash of the configmap in the pod template
        # This means that if the configmap changes, the deployment will be rolled
        checksum/config: {{ include (print $.Template.BasePath "/configmap-kube.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/secret-config.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ template "vmonitor-metric-agent.serviceAccountName" . }}
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repo }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ default "" .Values.image.pullPolicy | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        {{- if .Values.args }}
        args:
{{ toYaml .Values.args | indent 8 }}
        {{- end }}
        env:
{{ toYaml .Values.envKube | indent 8 }}
        envFrom:
          - secretRef:
              name: {{ include "vmonitor-metric-agent.secretconfigname" .}}
        volumeMounts:
        - name: varrunutmpro
          mountPath: /var/run/utmp
          readOnly: true
        - name: machine-id
          mountPath: /etc/machine-id
          readOnly: true
        - name: hostfsro
          mountPath: /hostfs
          readOnly: true
        {{- if .Values.configKube.docker.enabled }}
        {{- if hasPrefix "unix" .Values.configKube.docker.endpoint }}
        - name: docker-socket
          mountPath: {{ trimPrefix "unix://" .Values.configKube.docker.endpoint }}
        {{- end }}
        {{- end }}
        - name: config
          mountPath: /etc/telegraf
        {{- if .Values.mountPoints }}
{{ toYaml .Values.mountPoints | indent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      volumes:
      - name: hostfsro
        hostPath:
          path: /
      {{- if .Values.configKube.docker.enabled }}
      {{- if hasPrefix "unix" .Values.configKube.docker.endpoint }}
      - name: docker-socket
        hostPath:
          path: {{ trimPrefix "unix://" .Values.configKube.docker.endpoint }}
          type: Socket
      {{- end }}
      {{- end }}
      - name: varrunutmpro
        hostPath:
          path: /var/run/utmp
      - name: config
        configMap:
          name:  {{ include "vmonitor-metric-agent.kubeconfig" . }}
      - name: machine-id
        hostPath:
          path: /etc/machine-id
          type: File
      {{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 6 }}
      {{- end }}
      hostNetwork: {{ default true .Values.hostNetwork }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
      {{- end }}
